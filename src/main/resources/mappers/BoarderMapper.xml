<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.carrot_market.board.db.BoardMapper">
    <!-- 커뮤니티 글 작성 -->
    <insert id="insertBoard" parameterType="com.example.carrot_market.board.domain.model.Board">
        INSERT INTO boards (user_id, area_id, content, category, title)
              VALUE (#{userId}, #{areaId}, #{content}, #{category}, #{title})
    </insert>

    <!-- 사용자가 작성한 커뮤니티 글목록 조회 -->
    <select id="getBoardListByUserId" parameterType="int" resultType="com.example.carrot_market.board.domain.model.Board">
        SELECT b.*,
               a.dong
          FROM boards    b
          JOIN areas     a
            ON a.id    = b.area_id
         WHERE user_id = #{userId}
      ORDER BY b.created_at DESC
    </select>

    <!-- 설정한 지역의 커뮤니티 글목록 전체 조회 -->
    <select id="getBoardListByAreaId" parameterType="int" resultType="com.example.carrot_market.board.domain.model.Board">
        SELECT b.*,
               a1.dong
          FROM boards b
          JOIN areas a1
            ON a1.id = b.area_id
         WHERE ST_DISTANCE_SPHERE(a1.geo_point, (SELECT geo_point FROM areas WHERE id = #{areaId})) &lt;= 2000
      ORDER BY b.created_at DESC
    </select>

    <!-- 선택한 커뮤니티의 정보 조회 -->
    <select id="getDetailBoard" parameterType="int" resultType="com.example.carrot_market.board.dto.getDetailBoardResultDto">
        SELECT u.id as userId,
               u.nickname,
               u.profile_image as userImage,
               a.id as areaId,
               a.dong as areaName,
               bc.name as category,
               b.id as boardId,
               b.created_at as createdAt,
               b.content,
               b.title,
               b.view_count as viewCount,
               b.comment_count as commentCount,
               b.like_count as likeCount
          FROM boards b
          JOIN users u ON b.user_id = u.id
          JOIN areas a ON b.area_id = a.id
          JOIN board_categories bc ON b.category = bc.id
         WHERE b.id = #{boardId}
    </select>

    <!-- 단일 커뮤니티 조회 -->
    <select id="selectBoardById" parameterType="int" resultType="com.example.carrot_market.board.domain.model.Board">
        SELECT *
          FROM boards
         WHERE id = #{id}
    </select>

    <!-- 사용자가 작성한 커뮤니티의 정보 수정 -->
    <update id="updateBoard">
        UPDATE boards
           SET content = #{content},
               category = #{category},
               title = #{title},
               update_at = #{updateAt}
         WHERE id = #{id}
    </update>

    <!-- 커뮤니티 조회수 -->
    <update id="increaseBoardViewCount" parameterType="int">
        UPDATE boards
           SET view_count = view_count + 1
         WHERE id = #{boardId}
    </update>

    <!-- 선택한 커뮤니티 삭제 -->
    <select id="deleteBoard" parameterType="int" resultType="boolean">
        DELETE
          FROM boards
         WHERE id = #{id}
    </select>
    <!-- 선택한 커뮤니티의 댓글도 함께 삭제 -->
    <select id="deleteBoardWithComment" parameterType="int" resultType="boolean">
        DELETE
          FROM comments
         WHERE board_id = #{id}
    </select>

    <!-- 댓글 작성 -->
    <insert id="insertComment">
        INSERT INTO comments (board_id, user_id, area_id, content)
              VALUE (#{boardId}, #{userId}, #{areaId}, #{content})
    </insert>

    <!-- 단일 댓글 조회 -->
    <select id="selectCommentById" parameterType="int" resultType="com.example.carrot_market.board.domain.model.Comment">
        SELECT *
          FROM comments
         WHERE id = #{id}
    </select>

    <!-- 커뮤니티 내 댓글 조회 -->
    <select id="getCommentsByBoardId" parameterType="int" resultType="com.example.carrot_market.board.domain.model.Comment">
        SELECT C.*,
               u.nickname AS userNm,
               u.profile_image AS userImage,
               a.dong AS areaNm
          FROM comments c
          JOIN users u  ON u.id = c.user_id
          JOIN areas a  ON a.id = c.area_id
          JOIN boards b ON b.id = c.board_id
         WHERE b.id = #{boardId}
    </select>

    <!-- 댓글 삭제 -->
    <select id="deleteComment" parameterType="int" resultType="boolean">
        DELETE
        FROM comments
        WHERE id = #{id}
    </select>
</mapper>